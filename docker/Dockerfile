ARG from

FROM ${from}

LABEL Dmitrii Dobriborsci "dobriy06@gmail.com"

# Timezone Configuration
ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
ENV DEBIAN_FRONTEND = noninteractive

# Local install
RUN apt update && apt install locales
RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
RUN export LANG=en_US.UTF-8

# Apps install
RUN apt-get update && apt-get install -y apt-utils \
                                         software-properties-common \
                                         lsb-release \
                                         mesa-utils \
                                         gnupg2 \
                                         net-tools \
                                         build-essential \
                                         wget \
                                         unzip \
                                         curl \
                                         git \
                                         mc \
                                         vim \
                                         gedit \
                                         python2 \
                                         python-dev \
                                         python3-pip \
                                         gcc \
                                         gfortran \
                                         libopenblas-dev \ 
					                     cmake \
                                         ffmpeg

# Install ROS desktop and Gazebo

RUN add-apt-repository ppa:trinitronx/focal-backport-buildeps
RUN apt-get update
RUN apt-get install -y python3-pyqt5

RUN echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

RUN apt-get update && apt-get install -y ros-noetic-desktop-full \
   ros-noetic-joy ros-noetic-teleop-twist-joy \
   ros-noetic-teleop-twist-keyboard ros-noetic-laser-proc \
   ros-noetic-rgbd-launch ros-noetic-rosserial-arduino \
   ros-noetic-rosserial-python ros-noetic-rosserial-client \
   ros-noetic-rosserial-msgs ros-noetic-amcl ros-noetic-map-server \
   ros-noetic-move-base ros-noetic-urdf ros-noetic-xacro \
   ros-noetic-compressed-image-transport ros-noetic-rqt* ros-noetic-rviz \
   ros-noetic-gmapping ros-noetic-navigation ros-noetic-interactive-markers \
   ros-noetic-dynamixel-sdk \
   ros-noetic-turtlebot3-msgs \
   ros-noetic-turtlebot3



#RUN pip3 install torch==1.9.1+cu111 torchvision==0.10.1+cu111 torchaudio==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html

## GUI tunnel from docker
RUN dpkg --add-architecture i386 && \
    apt-get update && apt-get install -y --no-install-recommends \
        libxau6 libxau6:i386 \
        libxdmcp6 libxdmcp6:i386 \
        libxcb1 libxcb1:i386 \
        libxext6 libxext6:i386 \
        libx11-6 libx11-6:i386 && \
    rm -rf /var/lib/apt/lists/*

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES \
        ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
        ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics,compat32,utility

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

RUN apt-get update && apt-get install -y --no-install-recommends \
        libglvnd0 libglvnd0:i386 \
        libgl1 libgl1:i386 \
        libglx0 libglx0:i386 \
        libegl1 libegl1:i386 \
        libgles2 libgles2:i386 && \
    rm -rf /var/lib/apt/lists/*

COPY docker/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json
# Required for non-glvnd setups.
ENV LD_LIBRARY_PATH /usr/lib/x86_64-linux-gnu:/usr/lib/i386-linux-gnu${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}:/usr/local/nvidia/lib:/usr/local/nvidia/lib64

# RUN echo 'export ROS_DOMAIN_ID=30 #TURTLEBOT3' >> ~/.bashrc                    
RUN echo "source /opt/ros/noetic/setup.bash"  >> ~/.bashrc 

ENV source /opt/ros/noetic/setup.bash
ENV source ~/../turtlebot3_ws/build.bash

# Install Python 3.11 and regelum-control module
RUN add-apt-repository -y ppa:deadsnakes/ppa
RUN apt-get update -y

RUN apt-get install -y python3.10 python3.10-venv python3.10-dev
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10
RUN python3.10 -m pip install --ignore-installed regelum-control==0.3.2
RUN pip3 uninstall -y pyqt5

COPY ../dev-requirements.txt /requirements.txt
RUN python3.10 -m pip install -r /requirements.txt

RUN git config --global --add safe.directory /regelum-playground
RUN git config --global --add safe.directory /regelum-control

RUN echo 'source ~/../turtlebot3_ws/devel/setup.bash' >> ~/.bashrc \
    && echo 'export TURTLEBOT3_MODEL=burger' >> ~/.bashrc
#    && echo 'export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH ~/../turtlebot3_ws/src/turtlebot3_simulations/turtlebot3_gazebo/models' >> ~/.bashrc \
#    && echo 'export ROS_MASTER_URI=http://192.168.50.62:11311' >> ~/.bashrc \
#    && echo 'export ROS_HOSTNAME=192.168.50.62' >> ~/.bashrc

# Need to change your IP in the variables $ROS_MASTER_URI and $ROS_HOSTNAME
